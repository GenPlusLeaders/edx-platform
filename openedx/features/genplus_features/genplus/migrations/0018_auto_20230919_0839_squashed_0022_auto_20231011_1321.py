# Generated by Django 2.2.25 on 2023-10-17 04:16

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    replaces = [('genplus', '0018_auto_20230919_0839'), ('genplus', '0018_auto_20231006_1221'), ('genplus', '0019_auto_20231009_0139'), ('genplus', '0020_school_cost_center'), ('genplus', '0021_auto_20231010_0713'), ('genplus', '0022_auto_20231011_1321')]

    dependencies = [
        ('genplus', '0017_school_is_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocalAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('saml_configuration_slug', models.SlugField(blank=True, help_text='Slug of saml configuration i.e rmunify-dev, rmunify-stage', max_length=30, null=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='school',
            name='local_authority',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='genplus.LocalAuthority'),
        ),
        migrations.AlterField(
            model_name='genuser',
            name='email',
            field=models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='class',
            name='type',
            field=models.CharField(blank=True, choices=[('TeachingGroup', 'TeachingGroup'), ('RegistrationGroup', 'RegistrationGroup'), ('TeachingGrp', 'TeachingGrp'), ('RegGrp', 'RegGrp')], max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='genuser',
            name='role',
            field=models.CharField(blank=True, choices=[('Student', 'Student'), ('Faculty', 'Faculty'), ('Affiliate', 'Affiliate'), ('Employee', 'Employee'), ('TeachingStaff', 'TeachingStaff'), ('NonTeachingStaff', 'NonTeachingStaff'), ('staff', 'staff')], max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='school',
            name='cost_center',
            field=models.CharField(blank=True, default=None, help_text='Need in the case of xporter schools.', max_length=32, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='LocalAuthorityDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='genlog',
            name='gen_log_type',
            field=models.CharField(choices=[('RMUnify provision update user deleted', 'RMUnify provision update user deleted'), ('Student removed from class', 'Student removed from class'), ('Student added to class', 'Student added to class'), ('Program Enrollment remove', 'Program Enrollment remove'), ('Student part of more than one school', 'Student part of more than one school'), ('School Updated', 'School Updated'), ('Registration failed', 'Registration failed')], max_length=128),
        ),
        migrations.AddField(
            model_name='localauthority',
            name='domains',
            field=models.ManyToManyField(blank=True, related_name='local_authorities', to='genplus.LocalAuthorityDomain'),
        ),
    ]
